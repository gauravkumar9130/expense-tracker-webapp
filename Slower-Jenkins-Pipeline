pipeline {
    agent any
    environment {
        SONAR_HOME = tool "Sonar"
        BUILD_VERSION = "v${env.BUILD_NUMBER}"
    }
    stages {
        stage("Clone Code from GitHub") {
            steps {
                git url: "https://github.com/gauravkumar9130/expense-tracker-webapp", branch: "master"
            }
        }

        stage("Build") {
            steps {
                sh 'mvn clean compile'
            }
        }

        stage("SonarQube Quality Analysis") {
            steps {
                withSonarQubeEnv("Sonar") {
                    sh "$SONAR_HOME/bin/sonar-scanner -Dsonar.projectName=mydevproject -Dsonar.projectKey=mydevproject -Dsonar.sources=. -Dsonar.java.binaries=target/classes"
                }
            }
        }

        stage("Dependency Check") {
            steps {
                withCredentials([usernamePassword(credentialsId: 'ossindex-creds', 
                                                  usernameVariable: 'OSS_USER', 
                                                  passwordVariable: 'OSS_PASS')]) {
                    sh '''
cat > odc.properties <<EOF
analyzer.ossindex.user=$OSS_USER
analyzer.ossindex.password=$OSS_PASS
EOF

dependency-check --scan ./ \
                 --format HTML \
                 --out ./dependency-check-report.html \
                 --propertyfile odc.properties \
                 --data /var/lib/jenkins/dependency-data
                    '''
                }
            }
        }

        stage("Build Image and Trivy Scan") {
            steps {
                echo "Building Docker image with tag ${BUILD_VERSION}"
                sh "docker build -t gauravkumar9130/my-expense-tracker:${BUILD_VERSION} ."

                sh '''
mkdir -p trivy-reports
trivy image --exit-code 1 --severity HIGH,CRITICAL --format table gauravkumar9130/my-expense-tracker:${BUILD_VERSION} | tee trivy-reports/trivy-scan.txt
                '''
            }
        }

        stage("Manual Approval for Production") {
            steps {
                script {
                    emailext (
                        to: "devops.vishwas@gmail.com",
                        subject: "Approval Required: Docker Image & Sonar Scan",
                        body: """
Hello Team,

The Docker image gauravkumar9130/my-expense-tracker:${BUILD_VERSION} has been built and scanned with Trivy.
SonarQube quality analysis has also been completed.

Please review and approve if it's OK to push to Docker.

You can approve here: ${env.BUILD_URL}input

Thanks
"""
                    )
                }

                timeout(time: 1, unit: 'HOURS') {
                    input message: 'Approve deployment to Docker?', ok: 'Approve'
                }
            }
        }

        stage("Push Docker Image") {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-creds', 
                                                  usernameVariable: 'DOCKER_USER', 
                                                  passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
docker push gauravkumar9130/my-expense-tracker:${BUILD_VERSION}
                    '''
                }
            }
        }

        stage("Update Kubernetes Manifest & Push to GitHub") {
            steps {
                withCredentials([usernamePassword(credentialsId: 'github-pat', 
                                                  usernameVariable: 'GIT_USER', 
                                                  passwordVariable: 'GIT_PASS')]) {
                    sh """
git config user.email "jenkins@example.com"
git config user.name "Jenkins CI"
sed -i 's|gauravkumar9130/my-expense-tracker:.*|gauravkumar9130/my-expense-tracker:${BUILD_VERSION}|' k8s-files/2-expense-tracker-app.yml
git add k8s-files/2-expense-tracker-app.yml
git commit -m "Update expense-tracker image to version ${BUILD_VERSION}" || echo "No changes to commit"
git push https://${GIT_USER}:${GIT_PASS}@github.com/gauravkumar9130/expense-tracker-webapp.git master
                    """
                }
            }
        }
    }

    post {
        success {
            emailext (
                to: "devops.vishwas@gmail.com",
                subject: "SUCCESS: Jenkins Pipeline ${BUILD_NUMBER}",
                body: """
Hello Team,

The Jenkins pipeline for expense-tracker has completed SUCCESSFULLY.
Docker image: gauravkumar9130/my-expense-tracker:${BUILD_VERSION}
You can view the build details here: ${env.BUILD_URL}

Thanks
"""
            )
        }
        failure {
            emailext (
                to: "devops.vishwas@gmail.com",
                subject: "FAILURE: Jenkins Pipeline ${BUILD_NUMBER}",
                body: """
Hello Team,

The Jenkins pipeline for expense-tracker has FAILED.
Please check the Jenkins console output here: ${env.BUILD_URL}console

Thanks
"""
            )
        }
    }
}
